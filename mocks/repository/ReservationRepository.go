// Code generated by mockery v2.4.0. DO NOT EDIT.

package mocks

import (
	model "github.com/javiertlopez/golang-bootcamp-2020/model"
	mock "github.com/stretchr/testify/mock"
)

// ReservationRepository is an autogenerated mock type for the ReservationRepository type
type ReservationRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: eventID, reservation
func (_m *ReservationRepository) Create(eventID string, reservation model.Reservation) (model.Reservation, error) {
	ret := _m.Called(eventID, reservation)

	var r0 model.Reservation
	if rf, ok := ret.Get(0).(func(string, model.Reservation) model.Reservation); ok {
		r0 = rf(eventID, reservation)
	} else {
		r0 = ret.Get(0).(model.Reservation)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, model.Reservation) error); ok {
		r1 = rf(eventID, reservation)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByEventID provides a mock function with given fields: id
func (_m *ReservationRepository) GetByEventID(id string) ([]model.Reservation, error) {
	ret := _m.Called(id)

	var r0 []model.Reservation
	if rf, ok := ret.Get(0).(func(string) []model.Reservation); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.Reservation)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
